image:
  repository: tccr.io/truecharts/n8n
  tag: v0.170.0@sha256:bd1df50c3319a47bb5323b6d83ee1da50eea5717a4621d15c07ecfc97ab99cd5
  pullPolicy: IfNotPresent

securityContext:
  readOnlyRootFilesystem: false
  runAsNonRoot: false

podSecurityContext:
  runAsUser: 0
  fsGroup: 1000

env:
  GENERIC_TIMEZONE: "{{ .Values.TZ }}"
  DB_TYPE: "postgresdb"
  DB_POSTGRESDB_USER: "{{ .Values.postgresql.postgresqlUsername }}"
  DB_POSTGRESDB_DATABASE: "{{ .Values.postgresql.postgresqlDatabase }}"
  DB_POSTGRESDB_PORT: 5432
  QUEUE_BULL_REDIS_PORT: 6379
  N8N_USER_FOLDER: "/data"

probes:
  liveness:
    path: "/healthz"
  readiness:
    path: "/healthz"
  startup:
    path: "/healthz"

credentials: {}
  # CREDENTIALS_OVERWRITE_DATA: ""
  # CREDENTIALS_OVERWRITE_ENDPOINT: ""
  # CREDENTIALS_DEFAULT_NAME: "My credentials"
deployment:
  N8N_HOST: "localhost"
  # N8N_CONFIG_FILES: ""
  # N8N_ENCRYPTION_KEY: ""
  # N8N_DIAGNOSTICS_ENABLED: true
  # N8N_DISABLE_UI: false
  # N8N_PERSONALIZATION_ENABLED: true
  # N8N_VERSION_NOTIFICATIONS_ENABLED: true
endpoints: {}
  # WEBHOOK_URL: ""
  # N8N_PAYLOAD_SIZE_MAX: 16
  # N8N_METRICS: false
  # N8N_METRICS_PREFIX: "n8n_"
  # N8N_ENDPOINT_REST: "rest"
  # N8N_ENDPOINT_WEBHOOK: "webhook"
  # N8N_ENDPOINT_WEBHOOK_TEST: "webhook-test"
  # N8N_ENDPOINT_WEBHOOK_WAIT: "webhook-waiting"
  # N8N_DISABLE_PRODUCTION_MAIN_PROCESS: false
  # N8N_SKIP_WEBHOOK_DEREGISTRATION_SHUTDOWN: false
executions: {}
  # EXECUTIONS_PROCESS: "own"
  # EXECUTIONS_MODE: "regular"
  # EXECUTIONS_TIMEOUT: "-1"
  # EXECUTIONS_TIMEOUT_MAX: 3600
  # EXECUTIONS_DATA_SAVE_ON_ERROR: "all"
  # EXECUTIONS_DATA_SAVE_ON_SUCCESS: "all"
  # EXECUTIONS_DATA_SAVE_ON_PROGRESS: false
  # EXECUTIONS_DATA_SAVE_MANUAL_EXECUTIONS: false
  # EXECUTIONS_DATA_PRUNE: false
  # EXECUTIONS_DATA_MAX_AGE: 336
  # EXECUTIONS_DATA_PRUNE_TIMEOUT: 3600
logs:
  # N8N_LOG_LEVEL: "info"
  # N8N_LOG_OUTPUT: "console"
  # N8N_LOG_FILE_COUNT_MAX: 100
  # N8N_LOG_FILE_SIZE_MAX: 16
  N8N_LOG_FILE_LOCATION: "/data/logs"
security: {}
  # N8N_AUTH_EXCLUDE_ENDPOINTS: ""
  # N8N_BASIC_AUTH_ACTIVE: false
  # N8N_BASIC_AUTH_USER: ""
  # N8N_BASIC_AUTH_PASSWORD: ""
  # N8N_BASIC_AUTH_HASH: false
  # N8N_JWT_AUTH_ACTIVE: false
  # N8N_JWT_AUTH_HEADER: ""
  # N8N_JWT_AUTH_HEADER_VALUE_PREFIX: ""
  # N8N_JWKS_URI: ""
  # N8N_JWT_ISSUER: ""
  # N8N_JWT_NAMESPACE: ""
  # N8N_JWT_ALLOWED_TENANT: ""
  # N8N_JWT_ALLOWED_TENANT_KEY: ""
workflows: {}
  # WORKFLOWS_DEFAULT_NAME: "My workflow"

envFrom:
  - configMapRef:
      name: n8n-config

envValueFrom:
  DB_POSTGRESDB_HOST:
    secretKeyRef:
      name: dbcreds
      key: plainhost
  DB_POSTGRESDB_PASSWORD:
    secretKeyRef:
      name: dbcreds
      key: postgresql-password
  QUEUE_BULL_REDIS_HOST:
    secretKeyRef:
      name: rediscreds
      key: plainhost
  QUEUE_BULL_REDIS_PASSWORD:
    secretKeyRef:
      name: rediscreds
      key: redis-password

service:
  main:
    ports:
      main:
        port: 5678
        targetPort: 5678

persistence:
  data:
    enabled: true
    mountPath: "/data"

# Enabled redis
redis:
  enabled: true
  existingSecret: "rediscreds"

# Enabled postgres
postgresql:
  enabled: true
  existingSecret: "dbcreds"
  postgresqlUsername: n8n
  postgresqlDatabase: n8n
