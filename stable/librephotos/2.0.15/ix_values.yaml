image:
  repository: tccr.io/truecharts/librephotos-backend
  tag: v2022w6@sha256:4c24ce4ea5b340f83da0be0935eaea4ca525a15ed6da014f8ad8c709b377a837
  pullPolicy: IfNotPresent

frontendImage:
  repository: tccr.io/truecharts/librephotos-frontend
  tag: v2022w6@sha256:9cb2cb4865197d460405fecd79bdd7808333443cb2089753825f7f97365a53a3

proxyImage:
  repository: tccr.io/truecharts/librephotos-proxy
  tag: v2022w6@sha256:c147eaa3e96348e44132958ca871114a2ce240f0fa3604f738801317af09a160

securityContext:
  readOnlyRootFilesystem: false
  runAsNonRoot: false

podSecurityContext:
  runAsUser: 0
  runAsGroup: 0

secret:
  ADMIN_EMAIL: "admin@mydomain.com"
  ADMIN_USERNAME: "admin"
  ADMIN_PASSWORD: "password"
  MAPBOX_API_KEY: ""

env:
  BACKEND_HOST: "localhost"
  DB_BACKEND: "postgresql"
  DB_NAME: "{{ .Values.postgresql.postgresqlDatabase }}"
  DB_USER: "{{ .Values.postgresql.postgresqlUsername }}"
  DB_PORT: "5432"
  REDIS_PORT: "6379"
  WEB_CONCURRENCY: 2
  SKIP_PATTERNS: ""
  HEAVYWEIGHT_PROCESS: 1
  DEBUG: 0

envValueFrom:
  DB_PASS:
    secretKeyRef:
      name: dbcreds
      key: postgresql-password
  DB_HOST:
    secretKeyRef:
      name: dbcreds
      key: plainhost
  REDIS_HOST:
    secretKeyRef:
      name: rediscreds
      key: plainhost
  REDIS_PASS:
    secretKeyRef:
      name: rediscreds
      key: redis-password
  SECRET_KEY:
    secretKeyRef:
      name: librephotos-secrets
      key: SECRET_KEY

probes:
  liveness:
    path: "/login"
  readiness:
    path: "/login"
  startup:
    path: "/login"

redis:
  enabled: true
  existingSecret: "rediscreds"
  redisUsername: default

postgresql:
  enabled: true
  existingSecret: "dbcreds"
  postgresqlUsername: librephotos
  postgresqlDatabase: librephotos

service:
  main:
    ports:
      main:
        port: 10161
        targetPort: 80

additionalContainers:
  proxy:
    name: proxy
    image: "{{ .Values.proxyImage.repository }}:{{ .Values.proxyImage.tag }}"
    ports:
      - containerPort: 80
        name: main
    volumeMounts:
    - name: librephotos-config
      mountPath: "/etc/nginx/nginx.conf"
      subPath: nginx-config
      readOnly: true
    - name: media
      mountPath: "/data"
    - name: protected-media
      mountPath: "/protected_media"
  frontend:
    name: frontend
    image: "{{ .Values.frontendImage.repository }}:{{ .Values.frontendImage.tag }}"

persistence:
  media:
    enabled: true
    mountPath: "/data"
  protected-media:
    enabled: true
    mountPath: "/protected_media"
  logs:
    enabled: true
    mountPath: "/logs"
  cache:
    enabled: true
    mountPath: "/root/.cache"
